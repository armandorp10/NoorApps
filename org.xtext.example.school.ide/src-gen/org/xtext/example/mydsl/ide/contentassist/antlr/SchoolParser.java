/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl.ide.contentassist.antlr.internal.InternalSchoolParser;
import org.xtext.example.mydsl.services.SchoolGrammarAccess;

public class SchoolParser extends AbstractContentAssistParser {

	@Inject
	private SchoolGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalSchoolParser createParser() {
		InternalSchoolParser result = new InternalSchoolParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
					put(grammarAccess.getTipoDatoAccess().getAlternatives(), "rule__TipoDato__Alternatives");
					put(grammarAccess.getRootAccess().getGroup(), "rule__Root__Group__0");
					put(grammarAccess.getDetalleAccess().getGroup(), "rule__Detalle__Group__0");
					put(grammarAccess.getEntidadAccess().getGroup(), "rule__Entidad__Group__0");
					put(grammarAccess.getAtributoAccess().getGroup(), "rule__Atributo__Group__0");
					put(grammarAccess.getRootAccess().getNombreAssignment_2(), "rule__Root__NombreAssignment_2");
					put(grammarAccess.getRootAccess().getNavBarColorHexAssignment_6(), "rule__Root__NavBarColorHexAssignment_6");
					put(grammarAccess.getRootAccess().getTextColorAssignment_10(), "rule__Root__TextColorAssignment_10");
					put(grammarAccess.getRootAccess().getFloatingButtonColorAssignment_14(), "rule__Root__FloatingButtonColorAssignment_14");
					put(grammarAccess.getRootAccess().getEntidadAssignment_16(), "rule__Root__EntidadAssignment_16");
					put(grammarAccess.getRootAccess().getDetallesAssignment_17(), "rule__Root__DetallesAssignment_17");
					put(grammarAccess.getDetalleAccess().getNameAssignment_2(), "rule__Detalle__NameAssignment_2");
					put(grammarAccess.getDetalleAccess().getEsFuerteAssignment_6(), "rule__Detalle__EsFuerteAssignment_6");
					put(grammarAccess.getDetalleAccess().getEntidadAssignment_8(), "rule__Detalle__EntidadAssignment_8");
					put(grammarAccess.getEntidadAccess().getNameAssignment_2(), "rule__Entidad__NameAssignment_2");
					put(grammarAccess.getEntidadAccess().getDescripcionAssignment_6(), "rule__Entidad__DescripcionAssignment_6");
					put(grammarAccess.getEntidadAccess().getAtributoAssignment_8(), "rule__Entidad__AtributoAssignment_8");
					put(grammarAccess.getEntidadAccess().getDetallesAssignment_9(), "rule__Entidad__DetallesAssignment_9");
					put(grammarAccess.getAtributoAccess().getNombreAssignment_2(), "rule__Atributo__NombreAssignment_2");
					put(grammarAccess.getAtributoAccess().getEsEditableAssignment_6(), "rule__Atributo__EsEditableAssignment_6");
					put(grammarAccess.getAtributoAccess().getEsRequeridoAssignment_10(), "rule__Atributo__EsRequeridoAssignment_10");
					put(grammarAccess.getAtributoAccess().getEsVisibleAssignment_14(), "rule__Atributo__EsVisibleAssignment_14");
					put(grammarAccess.getAtributoAccess().getEsTituloAssignment_18(), "rule__Atributo__EsTituloAssignment_18");
					put(grammarAccess.getAtributoAccess().getTipoAssignment_22(), "rule__Atributo__TipoAssignment_22");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public SchoolGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(SchoolGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
